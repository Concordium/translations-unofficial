
.. _networkDashboardLink: https://dashboard.testnet.concordium.com/
.. _node-dashboard: http://localhost:8099
.. _Discord: https://discord.com/invite/xWmQ5tp

.. _become-a-baker-ko:

==================================
제빵사가되기 (블록 생성)
==================================

.. contents::
   :local:
   :backlinks: none

이 섹션에서는 제빵사가 무엇인지, 네트워크에서 제빵사가 역할을하며, 제빵사가되는 방법을 설명합니다.

이 섹션을 읽는 당신은 배울 것이다 :

-  제빵사는 무엇이며 그와 관련된 개념입니다.
-  베이커가되기 위해 노드를 업그레이드하는 방법.

제빵사가되는 과정은 다음의 단계로 요약 될 수있다 :

#. 계정과 일부 GTU를 가져옵니다.
#. 베이커 키 세트를 받으세요.
#. 계정에 베이커 키를 등록하십시오.
#. 베이커 키로 노드를 시작하십시오.

이 단계를 완료하면 베이커 노드가 블록을 굽습니다. 구운 블록이 체인에 추가되면 노드의 베이커는 보상을받습니다.

.. note::

   이 섹션에서는 베이커를 등록하고 관리하는 데 사용할 계정의 이름으로 ``bakerAccount`` 라는 이름을 사용합니다.

선명도
===========

베이커
-----

노드는 체인에 추가되는 새 블록을 생성하여 네트워크에 적극적으로 참여할 때 * 베이커 * (또는 * 베이킹 *)입니다.
제빵사는 블록 체인의 무결성을 유지하기 위해 블록에 포함 된 트랜잭션을 수집, 주문 및 검증합니다.
베이커는 각 블록에 서명하여 나머지 네트워크 참가자가 블록을 확인하고 실행할 수 있도록합니다.

베이커 키
------------------------

각 제빵사에는 *제빵사 키* 라는 암호화 키 세트가 있습니다. 노드는 이러한 키를 사용하여 베이킹하는 블록에 서명합니다.
특정 베이커가 서명 한 블록을 베이킹하려면 노드가 베이커 키 세트가로드 된 상태에서 실행되어야합니다.

베이커 계정
-------------

각 계정은 베이커 키 세트를 사용하여 베이커를 등록 할 수 있습니다.

제빵사가 체인에 포함 된 유효한 블록을 구울 때마다 얼마 후 관련 계정에 보상이 지급됩니다.

말뚝 및 복권
-----------------

.. todo::

   - 출시 일정에 연결합니다.

계정은 GTU 잔액의 일부를 *베이커 스테이크* 에 스테이 킹 할 수 있으며 나중에 스테이 킹 된 금액의 전부 또는 일부를 수동으로 해제 할 수 있습니다.
스테이 킹 된 금액은 베이커가 해제 할 때까지 이동하거나 양도 할 수 없습니다.

.. note::

   출시 일정에 따라 이체 된 금액이 계정에있는 경우 아직 출시되지 않은 경우에도 금액을 스테이 킹 할 수 있습니다.

블록을 굽는 데 선택 되려면 제빵사는 당첨 티켓을받을 확률이 베팅 금액에 거의 비례하는 *복권* 에 참여해야합니다.

제빵사가 마무리위원회에 포함되는지 여부를 계산할 때 동일한 지분이 사용됩니다. Finalization_ 을 참조하십시오.

.. _epochs-and-slot-ko:

에포크와 슬롯
----------------------

Concordium 블록 체인에서 시간은 *슬롯* 으로 세분됩니다. 슬롯은 Genesis 블록에서 고정 된 기간을 갖습니다.
주어진 브랜치에서 각 슬롯은 최대 하나의 블록을 가질 수 있지만 다른 브랜치의 여러 블록은 동일한 슬롯에서 생성 될 수 있습니다.

.. todo::

   의 사진을 추가 할 수 있습니다.

보상 및 기타 베이킹 관련 개념을 고려할 때 현재 베이커 및 스테이크 세트가 고정되는 기간을 정의하는 시간 단위로 *에포크* 개념을 사용합니다.
Epochs는 Genesis 블록에서 고정 된 기간을 가지고 있습니다. 테스트 넷에서 에포크의 기간은 **1 시간** 입니다.

베이킹 시작
==============

계정 관리
-----------------

이 섹션에서는 계정 가져 오기 관련 단계에 대한 간략한 요약을 제공합니다. 자세한 설명은 :ref:`managing_accounts` 를 참조하세요.

계정은 :ref:`concordium_id` 앱을 사용하여 생성됩니다. 계정이 성공적으로 생성되면 **더보기** 탭으로 이동하여 **내보내기**를 선택하면 계정 정보가 포함 된 JSON 파일을 가져올 수 있습니다.

도구 체인으로 계정을 가져 오려면 다음을 실행하십시오

.. code-block:: console

   $concordium-client config account import <path/to/exported/file> --name bakerAccount

``concordium-client``는 모든 계정을 내 보낸 파일의 암호를 해독하고 가져 암호를 요청합니다.
트랜잭션 서명 키와 암호화 된 전송 키를 암호화하는 데 동일한 암호가 사용됩니다.

제빵사에 대한 키를 생성하고 등록
---------------------------------------------

.. note::

   이 과정을 위해 계정이 모바일 앱에서 계정에 대한 100 GTU 드롭을 요청해야합니다 그래서 일부 GTU을 소유 할 필요가있다.

각 계정에는 베이커를 등록 할 때 사용되는 고유 한 베이커 ID가 있습니다. 이 ID는 네트워크에서 제공해야하며 현재 미리 계산할 수 없습니다.
이 ID는 베이커 키 파일에서 노드에 제공되어야 베이커 키를 사용하여 블록을 만들 수 있습니다. ``concordium-client``는 다음 작업을 수행 할 때이 필드를 자동으로 채 웁니다.

새로운 키 세트를 생성하려면 다음을 실행하십시오.

.. code-block:: console

   $concordium-client baker generate-keys <keys-file>.json

여기서 키 파일의 이름을 임의로 선택할 수 있습니다. 네트워크에 키를 등록하려면 :ref:`노드를 실행 <running-a-node-ko>`
이고``baker add ''트랜잭션을 네트워크에 보내야합니다.

.. code-block:: console

   $concordium-client baker add <keys-file>.json --sender bakerAccount --stake <amountToStake> --out <concordium-data-dir>/baker-credentials.json

바꾸다

- ``<amountToStake>`` 빵집의 초기 지분에 대한 GTU의 양
- ``<concordium-data-dir>`` 다음 데이터 디렉토리와 :

  * Linux 및 MacOS : ``~/.local/share/concordium``
  * Windows에서: ``%LOCALAPPDATA%\\concordium``.

(출력 파일 이름은 ``baker-credentials.json`` 으로 유지되어야합니다).

베이커의 스테이 킹 금액에 보상이 자동으로 추가되는 것을 방지하려면``--no-restake`` 플래그를 제공하십시오. 이 동작은 섹션에 설명되어 있습니다 `earnings을 Restaking`_.

이러한 베이커 키로 노드를 시작하고 블록 생성을 시작하려면 먼저 현재 실행중인 노드를 종료해야합니다 (노드가 실행중인 터미널에서``Ctrl + C`` 를 누르거나
``concordium-node-stop``).

적절한 디렉토리에 파일을 배치 한 후 (이미 출력 파일을 지정할 때 이전 명령에서 수행됨) ``concordium-node`` 를 사용하여 노드를 다시 시작합니다.
베이커가 현재 시대의 베이커에 포함되면 노드가 자동으로 베이킹을 시작합니다.

이 변경은 즉시 실행되며 베이커 추가 트랜잭션이 블록에 포함되는 하나의 에포크 이후에 마무리 될 때 적용된다.

.. table:: Timeline: 제빵사를 추가

   +-------------------------------------------+-----------------------------------------+-----------------+
   |                                           | When transaction is included in a block | After 2 epochs  |
   +===========================================+=========================================+=================+
   | Change is visible by querying the node    |  ✓                                      |                 |
   +-------------------------------------------+-----------------------------------------+-----------------+
   | Baker is included in the baking committee |                                         | ✓               |
   +-------------------------------------------+-----------------------------------------+-----------------+

.. note::

   베이커를 추가하는 트랜잭션이 `E` 시대에 블록에 포함 된 경우 `E + 2` 시대가 시작될 때 베이커는 베이킹위원회의 일부로 간주됩니다.

베이커 관리
==================

하여 빵 굽는 사람의 상태와 추첨 전원 확인
------------------------------------------------------

노드가 베이킹 중인지 확인하기 위해 표시된 정보에서 서로 다른 정밀도를 제공하는 다양한 소스를 확인할 수 있습니다.

- `네트워크 대시 보드 <http://dashboard.testnet.concordium.com>`_ 에서 노드는 ``Baker`` 열에 베이커 ID를 표시합니다.
- ``concordium-client`` 를 사용하면 현재 제빵사 목록과 그들이 보유하고있는 상대적 스테이 킹 금액, 즉 로또 파워를 확인할 수 있습니다.
  복 권력은 주어진 제빵사가 복권에 당첨되고 블록을 구울 가능성을 결정합니다.

   .. code-block:: console

     $concordium-client consensus show-parameters --include-bakers
     Election nonce:      07fe0e6c73d1fff4ec8ea910ffd42eb58d5a8ecd58d9f871d8f7c71e60faf0b0
     Election difficulty: 4.0e-2
     Bakers:
                                  Account                       Lottery power
             ----------------------------------------------------------------
         ...
         34: 4p2n8QQn5akq3XqAAJt2a5CsnGhDvUon6HExd2szrfkZCTD4FX   <0.0001
         ...

- ``concordium-client`` 를 사용하면 계정이 제빵사를 등록했는지, 그리고 그 제빵사가 보유한 현재 금액을 확인할 수 있습니다.

  .. code-block:: console

     $./concordium-client account show bakerAccount
     ...

     Baker: #22
      - Staked amount: 10.000000 GTU
      - Restake earnings: yes
     ...

- 스테이 킹 된 금액이 충분히 크고 베이커 키가로드 된 상태로 실행중인 노드가있는 경우 해당 베이커는 결국 블록을 생성해야하며
  다음 이미지에서 볼 수 있듯이 베이킹 보상이 계정에서 수신되고 있음을 모바일 지갑에서 확인할 수 있습니다.

  .. image:: images/bab-reward.png
     :align: center
     :width: 250px

판돈 금액 업데이트
-------------------------------

빵집 지분 실행을 업데이트하려면

.. code-block:: console

   $concordium-client baker update-stake --stake <newAmount> --sender bakerAccount

베팅 금액을 수정하면 제빵사가 블록을 굽도록 선출 될 확률이 수정됩니다.

베이커가 **처음으로 지분을 추가하거나 지분을 늘리면** 변경 사항이 체인에서 실행되고 거래가 블록에 포함되는 즉시 표시됩니다 (``concordium-client account show bakerAccount``
에서 확인할 수 있음) 이후 2 에포크가 적용됩니다.

.. table:: Timeline: 지분 증가

   +----------------------------------------+-----------------------------------------+----------------+
   |                                        | When transaction is included in a block | After 2 epochs |
   +========================================+=========================================+================+
   | Change is visible by querying the node | ✓                                       |                |
   +----------------------------------------+-----------------------------------------+----------------+
   | Baker uses the new stake               |                                         | ✓              |
   +----------------------------------------+-----------------------------------------+----------------+

제빵사가 **스테이 킹 금액을 줄이면** 변경 사항이 적용 되려면 *2 + bakerCooldownEpochs* epochs가 필요합니다. 트랜잭션이 블록에 포함되는 즉시 변경 사항이 체인에 표시되며
``concordium-client account show bakerAccount`` 를 통해 확인할 수 있습니다.

.. code-block:: console

   $concordium-client account show bakerAccount
   ...

   Baker: #22
    - Staked amount: 50.000000 GTU to be updated to 20.000000 GTU at epoch 261  (2020-12-24 12:56:26 UTC)
    - Restake earnings: yes

   ...

.. table:: Timeline: 지분 감소

   +----------------------------------------+-----------------------------------------+----------------------------------------+
   |                                        | When transaction is included in a block | After *2 + bakerCooldownEpochs* epochs |
   +========================================+=========================================+========================================+
   | Change is visible by querying the node | ✓                                       |                                        |
   +----------------------------------------+-----------------------------------------+----------------------------------------+
   | Baker uses the new stake               |                                         | ✓                                      |
   +----------------------------------------+-----------------------------------------+----------------------------------------+
   | Stake can be decreased again or        | ✗                                       | ✓                                      |
   | baker can be removed                   |                                         |                                        |
   +----------------------------------------+-----------------------------------------+----------------------------------------+

.. note::

   테스트 넷에서 ``bakerCooldownEpochs`` 는 처음에 168 epochs로 설정됩니다. 이 값은 다음과 같이 확인할 수 있습니다.

   .. code-block:: console

      $concordium-client raw GetBlockSummary
      ...
              "bakerCooldownEpochs": 168
      ...

.. warning::

   `정의`_ 섹션에서 언급했듯이 스테이 킹 된 금액은 *잠김* 입니다. 즉, 양도하거나 결제에 사용할 수 없습니다. 이를 고려하고 단기간에 필요하지 않을 금액을 스테이 킹하는 것을 고려해야합니다.
   특히 제빵사의 등록을 취소하거나 스테이 킹 된 금액을 수정하려면 거래 비용을 충당하기 위해 스테이 킹되지 않은 GTU를 소유해야합니다.

earnings을 Restaking
----------------------

네트워크 및 베이킹 블록에서 베이커로 참여할 때 계정은 베이크 된 각 블록에 대한 보상을받습니다. 이러한 보상은 기본적으로 스테이 킹 된 금액에 자동으로 추가됩니다.

이 동작을 수정하고 대신 자동으로 스테이 킹하지 않고 계정 잔액에서 보상을 받도록 선택할 수 있습니다. 이 스위치는 ``concordium-client`` 를 통해 변경할 수 있습니다.

.. code-block:: console

   $concordium-client baker update-restake False --sender bakerAccount
   $concordium-client baker update-restake True --sender bakerAccount

restake 플래그에 대한 변경 사항은 즉시 적용됩니다. 그러나 변경 사항은 다음 세대에서 베이킹 및 최종 전력에 영향을 미치기 시작합니다.
스위치의 현재 값은 ``concordium-client`` 를 사용하여 쿼리 할 수있는 계정 정보에서 볼 수 있습니다.

.. code-block:: console

   $concordium-client account show bakerAccount
   ...

   Baker: #22
    - Staked amount: 50.000000 GTU
    - Restake earnings: yes

   ...

.. table:: Timeline: 업데이트 restake

   +-----------------------------------------------+-----------------------------------------+-------------------------------+
   |                                               | When transaction is included in a block | 2 epochs after being rewarded |
   +===============================================+=========================================+===============================+
   | Change is visible by querying the node        | ✓                                       |                               |
   +-----------------------------------------------+-----------------------------------------+-------------------------------+
   | Earnings will [not] be restaked automatically | ✓                                       |                               |
   +-----------------------------------------------+-----------------------------------------+-------------------------------+
   | If restaking automatically, the gained        |                                         | ✓                             |
   | stake affects the lottery power               |                                         |                               |
   +-----------------------------------------------+-----------------------------------------+-------------------------------+

베이커가 등록되면 자동으로 수익을 재 스테이 킹하지만 위에서 언급했듯이 다음과 같이 ``baker add`` 명령에 ``--no-restake`` 플래그를 제공하여 변경할 수 있습니다.

.. code-block:: console

   $concordium-client baker add baker-keys.json --sender bakerAccount --stake <amountToStake> --out baker-credentials.json --no-restake

Finalization
------------

완료는 충분히 많은 수의위원회 구성원이 블록을 수신하고 그 결과에 동의 할 때 블록을 *완료* 하는 *완료위원회* 의 노드가 수행하는 투표 프로세스입니다.
새로운 블록은 체인의 무결성을 보장하기 위해 최종 블록을 조상으로 가져야합니다. 이 프로세스에 대한 자세한 내용은 :ref:`finalization<glossary-finalization>` 섹션을 참조하세요.

확정위원회는 일정 금액을 보유한 제빵사에 의해 구성됩니다. 이는 특히 최종 결정위원회에 참여하기 위해 해당 임계 값에 도달하기 위해 스테이크 금액을 수정해야 함을 의미합니다.
테스트 넷에서 최종 결정위원회에 참여하는 데 필요한 스테이 킹 금액은 **기존 GTU 총 금액의 0.1 %** 입니다.

완성위원회에 참여하면 완성 된 각 블록에 대한 보상이 생성됩니다. 보상은 블록이 완료된 후 얼마 동안 베이커 계정으로 지급됩니다.

제빵사를 제거
================

관리 계정은 체인에서 제빵사의 등록을 취소하도록 선택할 수 있습니다. 이렇게하려면 ``concordium-client`` 를 실행해야합니다.

.. code-block:: console

   $concordium-client baker remove --sender bakerAccount

이렇게하면 베이커 목록에서 베이커가 제거되고 자유롭게 이동하거나 이동할 수 있도록 베이커의 베팅 금액이 잠금 해제됩니다.

베이커를 제거 할 때 변경 사항은 베팅 금액을 줄이는 것과 동일한 타임 라인을 갖습니다. 변경 사항을 적용하려면 *2 + bakerCooldownEpochs* epochs가 필요합니다.
트랜잭션이 블록에 포함되는 즉시 변경 사항이 체인에 표시되며 평소와 같이 ``concordium-client`` 로 계정 정보를 쿼리하여이 변경 사항이 언제 적용되는지 확인할 수 있습니다.

.. code-block:: console

   $concordium-client account show bakerAccount
   ...

   Baker #22 to be removed at epoch 275 (2020-12-24 13:56:26 UTC)
    - Staked amount: 20.000000 GTU
    - Restake earnings: yes

   ...

.. table:: Timeline: 제빵사를 제거

   +--------------------------------------------+-----------------------------------------+----------------------------------------+
   |                                            | When transaction is included in a block | After *2 + bakerCooldownEpochs* epochs |
   +============================================+=========================================+========================================+
   | Change is visible by querying the node     | ✓                                       |                                        |
   +--------------------------------------------+-----------------------------------------+----------------------------------------+
   | Baker is removed from the baking committee |                                         | ✓                                      |
   +--------------------------------------------+-----------------------------------------+----------------------------------------+

.. warning::

   스테이 킹량 감소와 제빵사 제거는 동시에 할 수 없습니다. 스테이 킹 된 양을 줄여 생성 된 쿨 다운 기간 동안 제빵사는 제거 할 수 없으며 그 반대의 경우도 마찬가지입니다.

지원 및 피드백
==================

문제가 발생하거나 제안 사항이 있으면 질문을 게시하거나
`Discord`_ 에 대한 피드백 또는 testnet@concordium.com 으로 문의하십시오.
