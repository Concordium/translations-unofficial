.. _`Network Dashboard`: https://dashboard.testnet.concordium.com/
.. _Discord: https://discord.gg/xWmQ5tp

.. _run-a-node-ko:

================
노드를 실행합니다.
================

.. contents::
   :local:
   :backlinks: none

이 가이드에서는 컴퓨터에서 Concordium 네트워크에 참여하는 노드를 실행하는 방법을 알아 봅니다.
즉, 다른 노드로부터 블록 및 트랜잭션을 수신하고 블록 및 트랜잭션에 대한 정보를 Concordium 네트워크의 노드로 확산합니다.
이 가이드를 따르면 다음을 수행 할 수 있습니다.

- Concordium 노드를 실행합니다.
- 네트워크 대시보드에서 관찰합니다.
- 컴퓨터에서 직접 Concordium 블록체인의 상태를 쿼리합니다.

노드를 실행하는 데 계정이 필요하지 않습니다.

시작하기 전에
================

Concordium 노드를 실행하기 전에 다음을 수행해야합니다.

1. Docker를 설치하고 실행합니다.

   - *Linux* 에서 Docker가 루트가 아닌 사용자로 실행되도록 허용합니다.

2. :ref:`concordium-node-and-client-download` 소프트웨어를 다운로드하고 추출합니다.

이전 버전의 Open Testnet에서 업그레이드
===========================================

OpenTestnet 4용 현재 Concordium 소프트웨어로 업그레이드하려면:

-  위의 단계에 따라 다음을 수행하십시오 :ref:`다운로드 <downloads>` 최신 Concordium 소프트웨어.

-  압축 해제된 아카이브에서 ``cordium-node-reset-data`` 실행 파일을 실행하십시오.

   - *Mac* 사용자의 경우: 도구를 처음 열 때 ``concordium-node-reset-data`` 파일을 마우스 오른쪽 버튼으로 클릭하고 **Open** 을 선택합니다.
     소프트웨어가 미확인 개발자의 것이라는 메시지가 나타납니다. **Open** 를 다시 선택합니다.
   - *Windows* 사용자의 경우: 도구를 처음 열 때 ``cordium-node-reset-data`` 파일을 두 번 클릭합니다. 소프트웨어가 미확인 개발자의 것이라는 메시지가 나타납니다.
     **자세한 정보** → **어쨌든 실행* 을 선택합니다.

-  툴은 다음과 같은 질문을 합니다.

     *저장된 키도 제거하시겠습니까?*

   이전 버전에 대해 생성된 계정은 OpenTestnet 3에서 더 이상 유효하지 않습니다.
   따라서 이전 버전의 계정을 저장한 경우 **y** 를 입력하면 모든 계정 키가 삭제됩니다.

.. _running-a-node-ko:

노드를 실행합니다.
================

Open Testnet에 가입할 클라이언트 실행을 시작하려면 다음 단계를 수행합니다.

1. 압축 해제된 아카이브에서 ``cordium-node`` 실행 파일을 엽니다.

-  *Mac* 사용자의 경우: 도구를 처음 열 때 ``cordium-node`` 바이너리를 마우스 오른쪽 버튼으로 클릭하고 **Open**를 선택합니다.
   소프트웨어가 미확인 개발자의 것이라는 메시지가 나타납니다. **Open**을 다시 선택하십시오.
-  *Windows* 사용자의 경우: 도구를 처음 열 때 ``cordium-node`` 바이너리를 두 번 클릭합니다. 
   소프트웨어가 미확인 개발자의 것이라는 메시지가 나타납니다. **자세한 정보** → **어쨌든 실행*을 선택합니다.
-  *재시작* 할 때 노드는 ``--no-block-state-import`` 옵션을 사용하는 것을 고려합니다.
   이렇게 하면 노드가 비활성화된 동안 발생한 Concordium 블록 체인에 대한 업데이트만 다운로드되고 부팅 프로세스 속도가 빨라질 수 있습니다.

2. 노드 이름을 입력합니다. 이 이름은 공개 대시보드에 표시됩니다.

3. 시작하기 전에 도구가 시작된 경우 시작하기 전에 로컬 노드 데이터베이스를 삭제할지 묻는 메시지가 나타납니다.
   **y** 를 누르면 컴퓨터에 저장된 Concordium 블록 체인의 상태에 대한 정보가 삭제되고 이후에 다시 생성됩니다.
   **로컬 노드 데이터베이스를 삭제하면 노드가 콩코디움 네트워크를 따라잡는 데 더 오래 걸립니다.**

이제 도구가 Concordium Client 이미지를 다운로드하여 Docker에 로드합니다. 클라이언트는 노드 작동에 대한 로깅 정보를 시작하고 출력하기 시작합니다.

대시보드에서 노드를 확인합니다.
===========================

``concordium-node`` 를 실행 한 후 다음을 수행 할 수 있습니다.

-  `Network Dashboard`_ 에서 노드를 확인합니다.
-  :ref:`query <testnet-query-node>` 블록, 트랜잭션 및 계정에 대한 정보.

Network dashboard 네트워크 대시보드
-----------------------------------

클라이언트가 Concordium 블록 체인의 상태를 따라 잡는 데 시간이 걸립니다. 예를 들어 여기에는 체인의 모든 블록에 대한 정보를 다운로드하는 작업이 포함됩니다.

다른 정보 중에서도`네트워크 대시 보드`_ 에서 노드가 체인을 따라 잡는 데 걸리는 시간을 알 수 있습니다. 이를 위해 노드의 **Length** 값 (노드가받은 블록 수)을 상단에 표시되는
**Chain Lenght** 값 (네트워크에서 가장 긴 체인의 블록 수)과 비교할 수 있습니다 계기반.


인바운드 연결 활성화
============================

방화벽 뒤 또는 홈 라우터 뒤에서 노드를 실행하는 경우 다른 노드에만 연결할 수 있지만 다른 노드는 노드에 대한 연결을 시작할 수 없습니다.
이것은 완벽하게 괜찮으며 노드는 Concordium 네트워크에 완전히 참여합니다. 트랜잭션을 보낼 수 있으며, :ref:`구성된 경우 <become-a-baker-ko>`, 베이킹 및 마무리.

그러나 인바운드 연결을 활성화하여 노드를 더 나은 네트워크 참여자로 만들 수도 있습니다. 기본적으로``concordium-node`` 는 포트``8888`` 에서 인바운드 연결을 수신합니다.
네트워크 및 플랫폼 구성에 따라 외부 포트를 라우터의 ``8888`` 로 전달하거나 방화벽에서 열거 나 둘 다 수행해야합니다. 이 작업을 수행하는 방법에 대한 세부 정보는 구성에 따라 다릅니다.

포트 구성
-----------------

노드는 노드를 시작할 때 적절한 명령 줄 인수를 제공하여 구성 할 수있는 4 개의 포트를 수신합니다. 노드에서 사용하는 포트는 다음과 같습니다.

-  8888, ``--listen-node-port`` 로 설정할 수있는 피어-투-피어 네트워킹 용 포트
-  8082, ``--listen-middleware-port`` 로 설정할 수있는 미들웨어에서 사용하는 포트
-  10000, ``--listen-grpc-port`` 로 설정할 수있는 gRPC 포트

도커 컨테이너 위의 매핑 변경은 중지(:ref:`stop-a-node-ko`)하고 재설정한 다음 다시 시작해야 합니다.
컨테이너를 재설정하려면 터미널에서 ``concordium-node-reset-data`` 를 사용하거나 ``docker concordium-client`` 를 실행합니다.

방화벽이 포트 8888 (P2P 네트워킹 포트)에서만 공용 연결을 허용하도록 구성 할 것을 *적극 권장* 합니다. 다른 포트에 대한 액세스 권한이있는 사람은 노드에 저장 한 계정 또는 노드를 제어 할 수 있습니다.

.. _stop-a-node-ko:

노드를 중지하고 있습니다.
=================

노드를 중지하려면 **CTRL + c** 를 누르고 노드가 완전히 종료 될 때까지 기다립니다.

클라이언트를 명시 적으로 종료하지 않고 실수로 창을 닫으면 Docker의 백그라운드에서 계속 실행됩니다. 이 경우, 당신은``concordium-node`` 실행 파일을 열어 같은 방법으로 ``concordium-node-stop`` 바이너리를 사용합니다.

지원 및 피드백
==================

노드에 대한 로깅 정보는 ``concordium-node-retrieve-logs`` 도구를 사용하여 검색 할 수 있습니다.
실행중인 이미지의 로그를 파일로 저장합니다. 또한 권한이 부여되면 현재 시스템에서 실행중인 프로그램에 대한 정보를 검색합니다.

로그, 시스템 정보, 질문 및 피드백을 testnet@concordium.com으로 보낼 수 있습니다.
또한 `Discord`_ 에 문의하거나 :ref:`문제 해결 페이지 <troubleshooting-and-known-issues>` 를 확인할 수도 있습니다.
