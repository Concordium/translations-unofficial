.. _inspect-instance:

=====================================
Проверка экземпляра смарт-контракта
=====================================

Это руководство покажет, как производить проверку экземпляра смарт-контракта.
Проверка экземпляра показывает его имя, владельца, ссылку на модуль, баланс, состояние и функции приёма:

Подготовка
===========

Убедитесь, что :ref:`нода запущена<run-a-node>` используя последнюю версию :ref:`Concordium software<downloads>` и что имеется экземпляр on-chain смарт-контракта для проверки.

.. seealso::
   О том, как развернуть модуль смарт-контракта, смотрите :ref:`deploy-module` , и о том, как создать экземпляр, смотрите :ref:`initialize-contract`.

Проверка
==========

Чтобы проверить или отобразить информацию об экземпляре смарт-контракта с адресным индексом ``0``, выполните следующую команду:

.. code-block:: console

   $concordium-client contract show 0

Результат выполнения команды будет выглядеть примерно так:

.. code-block:: console

   Contract:        my_contract
   Owner:           '4Lh8CPhbL2XEn55RMjKii2XCXngdAC7wRLL2CNjq33EG9TiWxj' (default)
   ModuleReference: 'd121f262f3d34b9737faa5ded2135cf0b994c9c32fe90d7f11fae7cd31441e86'
   Balance:         0.000000 GTU
   State:
       {
           "first_field": 0,
           "second_field": 42
       }
   Functions:
    - receive_one
    - receive_two

.. seealso::

   Для получения более подробной информации об адресах экземпляров контракта,
   смотрите
   :ref:`references-on-chain`.

Уровень детализации проверки зависит от того, имеет ли команда ``show`` доступ к :ref:`contract schema <contract-schema>`.
Если схема встроена, она будет использоваться неявно. В противном случае схема может быть подключена с помощью параметра ``--schema /path/to/schema.bin``.

.. note::

   Файл схемы, подключенный с помощью параметра ``--schema`` будет иметь приоритет над встроенной схемой.

.. seealso::

   :ref:`Узнайте больше о том, зачем и как используются схемы смарт-контрактов <contract-schema>`.
