.. _no-std:

============================================
Сборка с использованием свойства ``no_std``
============================================

В этом руководстве показано, как активировать свойство ``no_std`` для смарт-контракта в Rust, которое может уменьшить размер итогового Wasm-модуля на несколько килобайт.

Подготовка
===========

Компиляция ``concordium-std`` без свойства ``std`` требует использования тулчейна Rust Nightly, который может быть установлен с помощью ``rustup``:

.. code-block:: console

   $rustup toolchain install nightly

Настройка модуля под свойство ``no_std``
=========================================

Библиотека ``concordium-std`` предоставляет свойство ``std`` которое активирует использование стандартной библиотеки Rust. Это свойство включено по умолчанию.

Для его отключения достаточно отключить свойства по умолчанию для
``concordium-std`` в секции зависимостей модуля.

.. code-block:: rust

   [dependencies]
   concordium-std = { version: "=0.2", default-features = false }

Чтобы иметь возможность переключаться между двумя режимами с использованием std и без, также добавьте ключ ``std`` в Ваш собственный модуль, который инициализирует свойство ``std`` из ``concordium-std``:

.. code-block:: rust

   [features]
   std = ["concordium-std/std"]

Это пример настройки смарт-контракта, где свойство ``std`` для всех модулей смарт-контракта активировано по умолчанию.

В процессе сборки модуля
==========================

Чтобы использовать тулчейн nightly, укажите  ``+nightly`` сразу после ``cargo``:

.. code-block:: console

   $cargo +nightly concordium build

Если нужно отключить значения по умолчанию для свойств модуля смарт-контракта, можно передать дополнительные аргументы для ``cargo``:

.. code-block:: console

   $cargo +nightly concordium build -- --no-default-features
