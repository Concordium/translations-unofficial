
.. _networkDashboardLink: https://dashboard.testnet.concordium.com/
.. _node-dashboard: http://localhost:8099
.. _Discord: https://discord.com/invite/xWmQ5tp

.. _become-a-baker:

===================================
Как стать пекарем (создание блоков)
===================================

.. contents::
   :local:
   :backlinks: none

В этой секции объясняется что такое пекарь, его роль в сети и как им стать.

После прочтения этой секции вы узнаете:

-  Что такое пекарь какие концепции с ним связаны
-  Как обновить вашу ноду, чтобы стать пекарем

Чтобы стать пекарем, вам необходимо выполнить следующее:

#. Получить на счёт некоторое количество токенов GTU.
#. Получить набор ключей пекаря.
#. Привязать ключи пекаря к учётной записи (счёту).
#. Запустить ноду с ключами пекаря.

После выполнения этих шагов нода-пекарь начнёт *готовить* блоки. Если приготовленный блок
будет добавлен в цепочку, нода пекаря получит вознаграждение.

.. note::

   В этой секции мы будет использовать термин ``bakerAccount`` - это тот же счёт (учётная запись),
   который используется для регистрации и управления пекарем.


Определения
===========

Пекарь
------

Нода является пекарем, если активно участвует в сети для создания новых блоков
и добавление их цепочку. Пекарь собирает, сортирует и проверяет транзакции которые включены в блок
для управления целостности блокчейна. Пекарь подписывает каждый блок, который готовит,
поэтому каждый блок может быть проверен и выполнен другими участниками сети.

Ключи пекаря
------------

Каждый пекарь владеет набором криптографических ключей, которые называется *ключи пекаря*.
Нода использует эти ключи для подписывания блоков которые готовит. Чтобы
готовить блоки подписанные определённым пекарем, в ноду должны быть загружены
эти ключи.

Счёт пекаря
-----------

Каждый счёт (учётная запись) может использовать набор ключей пекаря для регистрации пекаря.

Какждый раз, когда пекарь выпекает действительный блок, который включается в цепочку,
награда перечисляется на привязанный счёт, спустя некоторое время.

Доля и лотерея
--------------

.. todo::

   - Link to release schedule.

На счету может содержаться часть баланса GTU на *доле пекаря*. Сумма указывается при создании
и её можно скорректировать и позднее. Эта доля не может быть
использована для переводов, пока заблокирована пекарем.

.. note::

   Если на счету есть средства, которые предназначены для перевода по расписанию,
   эта сумма не может стать долей пекаря, даже если ещё не переведена.

Чтобы быть выбранным для приготовления блока, пекарь должен участвовать в
*лотерее*, в которой шанс получить выигрышный билет пропорционально
соответствует сумме его доли.

Эта же доля используется при вычислении, будет ли включен пекарь в коммитет финализации или нет.
См. Финализация_.

.. _epochs-and-slots:

Эпохи и слоты
-------------

В блокчейне Concordium время разделено на слоты. Слоты имеют фиксированную продолжительность
в блоке Genesis. В любой данной ветви каждый слот может иметь не более одного блока,
но несколько блоков в разных ветвях могут быть созданы в одном слоте.

.. todo::

   Let's add a picture.

При рассмотрении вознаграждений и других концепций, связанных с выпечкой,
мы используем концепцию эпохи как единицы времени, которая определяет период,
в течение которого набор текущих пекарей и ставок фиксируется.
Эпохи имеют фиксированную продолжительность в блоке Genesis.
В тестовой сети эпохи имеют продолжительность **1 час**.


Начало приготовления
====================

Управление счетами
------------------

В этом разделе дается краткое описание соответствующих шагов для импорта
счёта. Полное описание см. :ref:`managing_accounts`.

Счета создаются программой :ref:`concordium_id`. После того как счёт был создан,
необходимо перейти на вкладку **More** и выбрать **Export**,
это создаст JSON файл, содержащий информацию о счетах.

Для импорта счёта в ноду, выполните

.. code-block:: console

   $concordium-client config account import <path/to/exported/file> --name bakerAccount

``concordium-client`` запросит пароль, чтобы расшифровать экспортированный файл и
импортировать счёт. Тот же пароль будет использоваться для шифрования ключей транзакций
и зашифрованных ключей переводов.

Создание ключей пекаря и их регистрация
---------------------------------------

.. note::

   Для следующей процедуры вам необходимо иметь GTU на счету. Убедитесь что вы сделали зпрос
   100 GTU на счёт в мобильном приложении.

Каждый счёт имеет уникальный идентификатор пекаря (baker ID), который импользуется
во время регистрации. Этот ID предоставляется сетью и не может быть предварительно
вычислен. Этот ID должен быть указан внутри файла ключей пекаря для ноды,
чтобы он мог использовать ключи пекаря для создания блоков. ``concordium-client``
будет автоматически подставлять это значение для последующих операций.

Чтобы создать новый ключ, выполните:

.. code-block:: console

   $concordium-client baker generate-keys <keys-file>.json

здесь вы можете выбрать имя файла с ключами. Чтобы зарегистрировать ключи
в сети, нода должна быть запущена (см. :ref:`запуск ноды <running-a-node>`)
необходимо отправить в сеть транзакцию ``baker add``:

.. code-block:: console

   $concordium-client baker add <keys-file>.json --sender bakerAccount --stake <amountToStake> --out <concordium-data-dir>/baker-credentials.json

заменив

- ``<amountToStake>`` количеством GTU выбранным на долю пекаря
- ``<concordium-data-dir>`` значением, в зависимости от вашей ОС:

  * в Linux или MacOS: ``~/.local/share/concordium``
  * в Windows: ``%LOCALAPPDATA%\\concordium``.

(Имя файла должно остаться ``baker-credentials.json``).

Вы можете добавить``--no-restake`` опцию чтобы избежать автоматического зачисления
наград на долю пекаря. Это детальнее описано в секции
`Возврат прибыли`_.

Чтобы запустить ноду с ключами пекаря и начать производить блоки, вам
сначала необходимо выключить работающую ноду (либо нажав
``Ctrl + C`` в терминале, в котором запущена нода, либо воспользовавшись
исполняемым файлом ``concordium-node-stop``).

После размещения файла в соответствующем каталоге (уже было сделано
предыдущей командой при указании выходного файла), снова запустите ноду, используя
``concordium-node``. Нода автоматически начнет приготовление, когда пекарь
попадёт в список пекарей на текущую эпоху.

Это изменение будет выполнено немедленно и вступит в силу спустя одну эпоху, после той,
в которой транзакция на добавление пекаря была включена в блок.

.. table:: Хронология: добавление пекаря

   +-------------------------------------------+-----------------------------------------+-----------------+
   |                                           | Транзакция включена в блок              | Спустя 2 эпохи  |
   +===========================================+=========================================+=================+
   | Изменение видно в ноде по запросу         |  ✓                                      |                 |
   +-------------------------------------------+-----------------------------------------+-----------------+
   | Пекарь включён в список пекарей           |                                         | ✓               |
   +-------------------------------------------+-----------------------------------------+-----------------+

.. note::

   Если транзакция на добаление пекаря была включена в блок во время эпохи `E`, пекарь будет
   считаться частью списка пекарей когда начнётся эпоха `E+2`.

Управление пекарем
==================

Проверка статуса пекаря и шансов выиграть лотерею
-------------------------------------------------

Чтобы увидеть, готовит ли нода, вы можете проверить различные источники,
которые предлагают информацию с разной степенью точности.

- В `network dashboard <http://dashboard.testnet.concordium.com>`_, ваша нода
  содежит поле baker ID в столбце ``Baker``.
- Используя ``concordium-client`` вы можете проверить текущий список пекарей
  и соответствующие суммы долей на их счету, т.н. их шанс выиграть лотерею. Это значение
  означает, насколько вероятно пекарь получит шанс приготовить блок.

  .. code-block:: console

     $concordium-client consensus show-parameters --include-bakers
     Election nonce:      07fe0e6c73d1fff4ec8ea910ffd42eb58d5a8ecd58d9f871d8f7c71e60faf0b0
     Election difficulty: 4.0e-2
     Bakers:
                                  Account                       Lottery power
             ----------------------------------------------------------------
         ...
         34: 4p2n8QQn5akq3XqAAJt2a5CsnGhDvUon6HExd2szrfkZCTD4FX   <0.0001
         ...

- Используя ``concordium-client`` вы можете проверить что счёт был зарегистрирован
  в качестве пекаря и увидеть его долю.

  .. code-block:: console

     $./concordium-client account show bakerAccount
     ...

     Baker: #22
      - Staked amount: 10.000000 GTU
      - Restake earnings: yes
     ...

- Если поле "staked amount" достаточно большое, и нода запущена с загруженными
  ключами пекаря, пекарь должен время от времени производить блоки и вы можете увидеть в
  мобильном кошельке, что на счёт перечисляются награды пекарю, например как на скриншоте:

  .. image:: images/bab-reward.png
     :align: center
     :width: 250px

Обновление доли пекаря
----------------------

Для обновления доли пекаря, выполните

.. code-block:: console

   $concordium-client baker update-stake --stake <newAmount> --sender bakerAccount

Изменение этой суммы влияет на возможность пекаря быть выбранным для приготовления блока.

Когда пекарь **добавляет долю в первый раз или увеличивает свою долю**, это изменение
выполняется в цепочке и становится видимым как только транзакция включена в блок
(можно увидеть при помощи ``concordium-client account show
bakerAccount``) и приступает в силу спустя 2 эпохи.

.. table:: Хронология: увеличение доли

   +----------------------------------------+-----------------------------------------+----------------+
   |                                        | Транзакция включена в блок              | Спустя 2 эпохи |
   +========================================+=========================================+================+
   | Изменение видно в ноде по запросу      | ✓                                       |                |
   +----------------------------------------+-----------------------------------------+----------------+
   | Пекарь использует новую долю           |                                         | ✓              |
   +----------------------------------------+-----------------------------------------+----------------+

Когда пекарь **уменьшает свою долю**, изменению необходимо *2 +
bakerCooldownEpochs* эпох чтобы вступить в силу. Изменение становится видимым в цепочке
как только транзакция включена в блок, это можно просмотреть выполнив
``concordium-client account show bakerAccount``:

.. code-block:: console

   $concordium-client account show bakerAccount
   ...

   Baker: #22
    - Staked amount: 50.000000 GTU to be updated to 20.000000 GTU at epoch 261  (2020-12-24 12:56:26 UTC)
    - Restake earnings: yes

   ...

.. table:: Хронология: уменьшение доли

   +----------------------------------------+-----------------------------------------+----------------------------------------+
   |                                        | Транзакция включена в блок              | Спустя *2 + bakerCooldownEpochs* эпохи |
   +========================================+=========================================+========================================+
   | Изменение видно в ноде по запросу      | ✓                                       |                                        |
   +----------------------------------------+-----------------------------------------+----------------------------------------+
   | Пекарь использует новую долю           |                                         | ✓                                      |
   +----------------------------------------+-----------------------------------------+----------------------------------------+
   | Доля может быть уменьшена опять или    | ✗                                       | ✓                                      |
   | пекарь может быть удалён               |                                         |                                        |
   +----------------------------------------+-----------------------------------------+----------------------------------------+

.. note::

   В тестнете, ``bakerCooldownEpochs`` установлено в размере 168 эпох. Это значение
   может быть проверено при помощи команды:

   .. code-block:: console

      $concordium-client raw GetBlockSummary
      ...
              "bakerCooldownEpochs": 168
      ...

.. warning::

   Как говорилось в разделе `Определения`_, сумма доли является *заблокированной*,
   т.е. она не может быть отправлена или использована для оплаты. Вы должны рассчитывать,
   что эта сумма которая не пригодится в ближайшее временя. Например, для
   удаления пекаря или для изменения его доли вам потребуется некоторая сумма GTU
   на основном счету, чтобы оплатить стоимость транзакций (комиссии).

Возврат прибыли
---------------

Когда пекарь участвует в сети и готовит блоки, на счёт капают награды за каждый
приготовленный блок. Эти награды по умолчанию автоматически добавляются на долю
пекаря.

Вы можете изменить это поведение и вместо этого получать награды на баланс счёта.
Это изменение осуществляется при помощи ``concordium-client``:

.. code-block:: console

   $concordium-client baker update-restake False --sender bakerAccount
   $concordium-client baker update-restake True --sender bakerAccount

Эти изменения выполнятся немедленно, однако, начнут действовать на пекаря спустя 2 эпохи.
Текущее значение это опции можно узнать при помощи команды ``concordium-client``:

.. code-block:: console

   $concordium-client account show bakerAccount
   ...

   Baker: #22
    - Staked amount: 50.000000 GTU
    - Restake earnings: yes

   ...

.. table:: Хронология: изменение опции возврата

   +------------------------------------------------+-----------------------------------------+-------------------------------+
   |                                                | Транзакция включена в блок              | 2 эпохи после награждения     |
   +================================================+=========================================+===============================+
   | Изменение видно в ноде по запросу              | ✓                                       |                               |
   +------------------------------------------------+-----------------------------------------+-------------------------------+
   | Награды (не)будут капать на долю автоматически | ✓                                       |                               |
   +------------------------------------------------+-----------------------------------------+-------------------------------+
   | При автоматическом пересчёте, полученная доля  |                                         | ✓                             |
   | влияет на шанс выигрыша в лотерее              |                                         |                               |
   +------------------------------------------------+-----------------------------------------+-------------------------------+

Когда пекарь зарегистрирован, он автоматически будет пересчитывать свою долю при получении прибыли,
но как указано выше это может быть изменено при помощи опции ``--no-restake``
во время выполнения команды ``baker add``:

.. code-block:: console

   $concordium-client baker add baker-keys.json --sender bakerAccount --stake <amountToStake> --out baker-credentials.json --no-restake

Финализация
-----------

Финализация - это процесс голосования, выполняемый нодами в *финализационной
комиссии*, который *завершает* блок, в процессе достаточно большое количество членов
комиссии получивших блок, согласовывают его результат. Новые блоки
должны содержать завершенный блок в качестве родителя, чтобы гарантировать целостность
цепочки. Для получения дополнительной информации об этом процессе см.
секцию :ref:`финализация<glossary-finalization>`

Комиссия по финализации формируется из пекарей, имеющих определенную долю.
Это, в частности, означает, что для участия в процессе финализации вам,
вероятно, придется изменить сумму ставки, тобы достичь указанного порога.
В тестовой сети сумма ставки, необходимая для участия в комиссии
равна **0,1% от общего количества существующих GTU**.

Участие в комиссии финализации предполагает награды за каждый блок,
который был финализирован. Награды перечисляются на счёт пекаря через некоторое
время после того как блок был финализирован.

Удаление пекаря
===============

Владелец счёта может отменить регистрацию своего пекаря в цепочке. Для этого
воспользуйтесь командой ``concordium-client``:

.. code-block:: console

   $concordium-client baker remove --sender bakerAccount

Это удалит пекаря из списка пекарей и разблокирует его долю на счету, после чего
эта сумма свободно может исползоваться.

Данная процедура занимает столько же времени в эпохах, сколько и уменьшение доли пекаря.
Изменению потребуется *2 + bakerCooldownEpochs* эпох чтобы вступить в силу.
Изменение становится видимым в цепочке как только транзакция включена в блок,
вы можете проверить это как обычно выполнив команду ``concordium-client``:

.. code-block:: console

   $concordium-client account show bakerAccount
   ...

   Baker #22 to be removed at epoch 275 (2020-12-24 13:56:26 UTC)
    - Staked amount: 20.000000 GTU
    - Restake earnings: yes

   ...

.. table:: Timeline: removing a baker

   +--------------------------------------------+-----------------------------------------+----------------------------------------+
   |                                            | Транзакция включена в блок              | Спустя *2 + bakerCooldownEpochs* эпохи |
   +============================================+=========================================+========================================+
   | Изменение видно в ноде по запросу          | ✓                                       |                                        |
   +--------------------------------------------+-----------------------------------------+----------------------------------------+
   | Пекарь исключён из комитета пекарей        |                                         | ✓                                      |
   +--------------------------------------------+-----------------------------------------+----------------------------------------+

.. warning::

   Уменьшение доли пекаря и его удаление не может быть выполнено одновременно.
   На протяжении всего периода уменьшения доли пекаря вы не можете начинать процедуру
   удаления и наоборот.

Поддержка и обратная связь
==========================

Если вы столкнулись с проблемами или у вас возникли вопросы, свяжитесь с нами в `Discord`_,
или по электронной почте testnet@concordium.com.
