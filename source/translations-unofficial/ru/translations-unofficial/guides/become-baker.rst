
.. _networkDashboardLink: https://dashboard.testnet.concordium.com/
.. _node-dashboard: http://localhost:8099
.. _Discord: https://discord.com/invite/xWmQ5tp

.. _become-a-baker:

==================================
Стать бейкером (создавать блоки)
==================================

.. contents::
   :local:
   :backlinks: none

В этом разделе объясняется, что такое бейкер, его роль в сети и как им стать.

Прочитав этот раздел вы узнаете:

-  Что такое бейкер и понятия, связанные с ним.
-  Как обновить свою ноду, чтобы стать бейкером.

Процесс становления бейкером можно кратко описать следующими шагами:

#. Получите учетную запись и некоторое количество GTU.
#. Получите набор ключей бейкера.
#. Зарегистрируйте ключи в учетной записи.
#. Запустите ноду с помощью ключей бейкера.

После выполнения этих шагов нода бейкера будет создавать блоки. Если созданный блок будет добавлен в цепочку, бейкер ноды получит награду.

.. note::

   В этом разделе мы будем использовать имя ``bakerAccount``
   в качестве имени учетной записи, которая будет использоваться для регистрации и управления бейкером.

Определения
===========

Бейкер
-------

Нода является *baker* (или *is baking*) когда она активно участвует в сети, создавая новые блоки, которые добавляются в цепочку. Бейкер собирает, сортирует и проверяет транзакции, которые включены в блок, чтобы сохранить целостность блокчейна. Бейкер подписывает каждый блок, который создает, чтобы блок мог быть проверен и выполнен остальными участниками сети.

Ключи бейкера
--------------

Каждый бейкер имеет набор криптографических ключей, называемых *baker keys*. Нода использует эти ключи для подписи блоков, которые она создает. Для того чтобы создавать блоки, подписанные конкретным бейкером, нода должен быть запущена с загруженным набором ключей бейкера.

Учетная запись бейкера
-----------------------

Каждая учетная запись может использовать набор ключей бейкера для его регистрации.

Всякий раз, когда бейкер создает валидный блок, который включается в цепочку, через некоторое время в соответствующую учетную запись выплачивается вознаграждение.

Ставки и лотерея
-----------------

.. todo::

   - Ссылка на график выдачи.

Учетная запись может поставить часть своего GTU баланса на *baker stake* а затем вручную вывести всю или часть поставленной суммы. Поставленная сумма не может быть перемещена или переведена до тех пор, пока она не будет выведена бейкером.

.. note::

   Если на учетной записи имеется сумма, которая была переведена в соответствии с графиком вывода, эта сумма может быть поставлена, даже если она еще не выведена.

Для того, чтобы быть выбранным для создания блока, бейкер должен участвовать в
*lottery* в которой вероятность получения счастливого билета примерно пропорциональна поставленной сумме.

Эта же поставленная сумма используется при расчете того, будет ли включен бейкер в комитет. Смотрите Finalization_.

.. _epochs-and-slots:

Эпохи и слоты
----------------

В блокчейне Concordium время делится на *slots*. Слоты имеют фиксированную продолжительность времени в Genesis блоке. На любой заданной ветви каждый слот может иметь не более одного блока, но в одном слоте может быть произведено несколько блоков на разных ветвях.

.. todo::

   Давайте добавим картинку.

При рассмотрении вознаграждений и других концепций, связанных с созданием, мы используем понятие *epoch*
как единицы времени, которая определяет период, в котором фиксируется набор текущих бейкеров и ставок. Эпохи имеют продолжительность времени, зафиксированную в Genesis блоке. В testnet эпохи имеют продолжительность
**1 час**.

Начинаем бейкинг
================

Управление учетными записями
-----------------------------

В этом разделе приводится краткое описание шагов по импорту учетной записи. Полное описание смотрите в разделе :ref:`managing_accounts`.

Учетные записи создаются с помощью приложения :ref:`concordium_id`. После успешного создания учетной записи, переход на вкладку
**More** и выбор пункта **Export**
позволяет получить JSON-файл, содержащий информацию об учетной записи.

Чтобы импортировать учетную запись в toolchain, запустите

.. code-block:: console

   $concordium-client config account import <path/to/exported/file> --name bakerAccount

``concordium-client`` запросит пароль для расшифровки экспортированного файла и импорта всех учетных записей. Один и тот же пароль будет использоваться для шифрования ключей подписи транзакций и ключа зашифрованных переводов.

Создание ключей бейкера и их регистрация
--------------------------------------------

.. note::

   Для этого процесса учетная запись должна иметь некоторое количество GTU, поэтому обязательно запросите дроп в 100 GTU для учетной записи в мобильном приложении.

Каждая учетная запись имеет уникальный бейкер ID, который используется при регистрации бейкера. Этот ID должен быть предоставлен сетью и в настоящее время не может быть заранее вычислен. Этот ID должен быть задан внутри файла с ключами бейкера для ноды, чтобы она могла использовать ключи бейкера для создания блоков.
``concordium-client`` автоматически заполнит это поле при выполнении следующих операций.

Чтобы создать новый набор ключей запустите:

.. code-block:: console

   $concordium-client baker generate-keys <keys-file>.json

где вы можете выбрать произвольное имя для файла ключей. Чтобы зарегистрировать ключи в сети, вам нужно
:ref:`running a node <running-a-node>`
и отправить ``baker add`` transaction транзакцию в сеть:

.. code-block:: console

   $concordium-client baker add <keys-file>.json --sender bakerAccount --stake <amountToStake> --out <concordium-data-dir>/baker-credentials.json

 заменив

- ``<amountToStake>`` суммой GTU для начальной доли бейкера
- ``<concordium-data-dir>`` следующим расположением данных:

  * в Linux и MacOS: ``~/.local/share/concordium``
  * в Windows: ``%LOCALAPPDATA%\\concordium``.

(Имя выходного файла должно оставаться ``baker-credentials.json``).

Поставьте флаг ``--no-restake`` , чтобы избежать автоматического добавления вознаграждений к поставленной сумме на бейкере. Данное поведение описано в разделе `Restaking the earnings`_.

Чтобы запустить ноду с данными ключами бейкера и начать создавать блоки, вам сначала нужно закрыть текущую запущенную ноду (нажав
``Ctrl + C`` на терминале, где работает нода, или используя исполняемый файл
``concordium-node-stop``).

После размещения файла в соответствующей директории (уже сделано в предыдущей команде при указании выходного файла) снова запустите ноду с помощью
``concordium-node``. Нода автоматически начнет создание, когда конкретный бейкер будет включен в бейкеры текущей эпохи.

Это изменение будет выполнено немедленно и вступит в силу по окончании той эпохи, в которой транзакция по добавлению бейкера была включена в блок.

.. table:: Временная шкала: добавление бейкера

   +-------------------------------------------+-----------------------------------------+-----------------+
   |                                           | Когда транзакция включена в блок        | Через 2 эпохи   |
   +===========================================+=========================================+=================+
   | Изменение можно увидеть, запросив ноду    |  ✓                                      |                 |
   +-------------------------------------------+-----------------------------------------+-----------------+
   | Бейкер включен в состав комитета          |                                         | ✓               |
   +-------------------------------------------+-----------------------------------------+-----------------+

.. note::

   Если транзакция по добавлению бейкера была включена в блок в эпоху `E`, то бейкер будет частью комитета по созданию, когда начнется эпоха
   `E+2`.

Управление бейкером
====================

Проверка статуса бейкера и его лотерейной силы
------------------------------------------------------

Для проверки работоспособности процесса бейкинга на ноде, вы можете использовать различные источники методы, которые дают различные степени точности отображаемой информации.

- В `network dashboard <http://dashboard.testnet.concordium.com>`_, yourваша нода покажет свой бейкер ID в столбце ``Baker``.
- С помощью ``concordium-client`` вы можете проверить список текущих бейкеров и поставленную сумму, которую они держат, то есть их лотерейную силу. Лотерейная сила будет определять, насколько вероятно, что данный бейкер победит и создаст блок.

  .. code-block:: console

     $concordium-client consensus show-parameters --include-bakers
     Election nonce:      07fe0e6c73d1fff4ec8ea910ffd42eb58d5a8ecd58d9f871d8f7c71e60faf0b0
     Election difficulty: 4.0e-2
     Bakers:
                                  Учетная запись             Лотерейная сила
             ----------------------------------------------------------------
         ...
         34: 4p2n8QQn5akq3XqAAJt2a5CsnGhDvUon6HExd2szrfkZCTD4FX   <0.0001
         ...

- С помощью ``concordium-client`` вы можете проверить, зарегистрировала ли учетная запись бейкера и какая текущая сумма поставлена этим бейкером.

  .. code-block:: console

     $./concordium-client account show bakerAccount
     ...

     Baker: #22
      - Staked amount: 10.000000 GTU
      - Restake earnings: yes
     ...

- Если поставленная сумма достаточно велика и есть нода, работающая с загруженными ключами бейкера, то этот бейкер должен производить блоки, и вы можете видеть в своем мобильном кошельке, как вознаграждение за создание приходит в учетную запись, как показано на данном изображении:

  .. image:: images/bab-reward.png
     :align: center
     :width: 250px

Обновление поставленной суммы
------------------------------

Чтобы обновить поставленную сумму бейкера, запустите

.. code-block:: console

   $concordium-client baker update-stake --stake <newAmount> --sender bakerAccount

Изменение поставленной суммы изменяет вероятность того, что бейкер будет выбран для создания блоков.

Когда бейкер **добавляет или увеличивает свою поставленную сумму в первый раз**, это изменение выполняется в цепочке и становится видимым, как только транзакция включается в блок (это можно увидеть с помощью
``concordium-client account show
bakerAccount``) и вступает в силу через 2 эпохи после этого.

.. table:: Временная шкала: увеличение поставленной суммы 

   +----------------------------------------+-----------------------------------------+----------------+
   |                                        | Когда транзакция включена в блок        | Через 2 эпохи  |
   +========================================+=========================================+================+
   | Изменение можно увидеть, запросив ноду | ✓                                       |                |
   +----------------------------------------+-----------------------------------------+----------------+
   | Бейкер использует новую сумму          |                                         | ✓              |
   +----------------------------------------+-----------------------------------------+----------------+

Когда бейкер **уменьшает поставленную сумму**, для вступления в силу изменения потребуется *2 +
bakerCooldownEpochs* эпохи. Изменение становится видимым в цепочке, как только транзакция включается в блок, с ней можно ознакомиться через
``concordium-client account show bakerAccount``:

.. code-block:: console

   $concordium-client account show bakerAccount
   ...

   Baker: #22
    - Staked amount: 50.000000 GTU to be updated to 20.000000 GTU at epoch 261  (2020-12-24 12:56:26 UTC)
    - Restake earnings: yes

   ...

.. table:: Временная шкала: уменьшение поставленной суммы

   +----------------------------------------+-----------------------------------------+----------------------------------------+
   |                                        | Когда транзакция включена в блок        | После 2 + bakerCooldownEpochs эпох     |
   +========================================+=========================================+========================================+
   | Изменение можно увидеть, запросив ноду | ✓                                       |                                        |
   +----------------------------------------+-----------------------------------------+----------------------------------------+
   | Бейкер использует новую сумму          |                                         | ✓                                      |
   +----------------------------------------+-----------------------------------------+----------------------------------------+
   | Поставленная сумма может быть снова    | ✗                                       | ✓                                      |
   | уменьшена или бейкер может быть удален |                                         |                                        |
   +----------------------------------------+-----------------------------------------+----------------------------------------+

.. note::

   В the testnet, ``bakerCooldownEpochs`` изначально установлен на 168 эпох. Это значение можно проверить следующим образом:

   .. code-block:: console

      $concordium-client raw GetBlockSummary
      ...
              "bakerCooldownEpochs": 168
      ...

.. warning::

   Как было отмечено в разделе `Definitions`_  поставленная сумма *locked*,
   то есть она не может быть переведена или использована для оплаты. Вы должны принять это во внимание и ставить сумму, которая не понадобится в краткосрочной перспективе. В частности, чтобы отменить регистрацию бейкера или изменить поставленную сумму, вам нужно иметь некоторое количество GTU, чтобы покрыть транзакционные издержки.

Добавление вознаграждения к поставленной сумме
-----------------------------------------------

Работая в сети в роли бейкера и создавая блоки, учетная запись получает вознаграждение за каждый созданный блок. Эти награды автоматически добавляются к поставленной сумме по умолчанию.

Вы можете изменить это поведение и вместо этого получать вознаграждения на балансе учетной записи, не ставя их автоматически. Этот переключатель можно переключить с помощью ``concordium-client``:

.. code-block:: console

   $concordium-client baker update-restake False --sender bakerAccount
   $concordium-client baker update-restake True --sender bakerAccount

Изменения флага restake вступят в силу немедленно; однако изменения начнут влиять на создание и завершающую обработку через 1 эпоху. Текущее значение переключателя можно увидеть в информации об учетной записи, которую можно запросить с помощью ``concordium-client``:

.. code-block:: console

   $concordium-client account show bakerAccount
   ...

   Baker: #22
    - Staked amount: 50.000000 GTU
    - Restake earnings: yes

   ...

.. table:: Временная шкала: обновление добавления вознаграждения к поставленной сумме

   +-----------------------------------------------+-----------------------------------------+----------------------------------------+
   |                                               | Когда транзакция включена в блок        | 2 эпохи после получения вознаграждения |
   +===============================================+=========================================+========================================+
   | Изменение можно увидеть, запросив ноду        | ✓                                       |                                        |
   +-----------------------------------------------+-----------------------------------------+----------------------------------------+
   | Вознаграждения [не] будут добавлены к         | ✓                                       |                                        |
   | поставленной сумме автоматически              |                                         |                                        |
   +-----------------------------------------------+-----------------------------------------+----------------------------------------+
   | Если добавление к поставленной сумме          |                                         | ✓                                      |
   | происходит автоматически, то полученная сумма |                                         |                                        |
   | влияет на лотерейную силу                     |                                         |                                        |
   +-----------------------------------------------+-----------------------------------------+----------------------------------------+

При регистрации бейкер автоматически добавляет вознаграждение к поставленной сумме, но, как уже упоминалось выше, это можно изменить, поставив команде
``baker add`` флаг ``--no-restake``, как показано здесь:

.. code-block:: console

   $concordium-client baker add baker-keys.json --sender bakerAccount --stake <amountToStake> --out baker-credentials.json --no-restake

Завершение обработки 
----------------------

Завершение обработки - это процесс голосования, выполняемый нодами в *finalization
committee* который *finalizes* обработку блока, а когда достаточно большое число членов комитета получили блок и согласовали его результат. Более новые блоки должны иметь завершенный блок в качестве предка, чтобы обеспечить целостность цепочки. Дополнительные сведения об этом процессе смотрите в разделе
:ref:`finalization<glossary-finalization>`.

Комитет формируется бейкерами, которые имеют определенную поставленную сумму. Это, в частности, означает, что для участия в комитете вам, вероятно, придется изменить поставленную сумму, чтобы достичь указанного порога. В testnet поставленная сумма, необходимая для участия в комитете, составляет **0.1% от общей суммы существующих GTU**.

Участие в комитете дает вознаграждение за каждый завершенный блок. Вознаграждение выплачивается в учетную запись бейкера через некоторое время после завершения обработки блока.

Удаление бейкера
=================

онтролирующая учетная запись может отменить регистрацию своего бейкера в цепочке. Для этого вам необходимо выполнить ``concordium-client``:

.. code-block:: console

   $concordium-client baker remove --sender bakerAccount

Это позволит удалить бейкера из списка бейкеров и разблокировать поставленную на него сумму, чтобы ее можно было свободно переводить или перемещать.

При удалении бейкера изменение имеет ту же временную шкалу, что и уменьшение поставленной суммы. Чтобы это изменение вступило в силу, потребуется
*2 + bakerCooldownEpochs* эпохи.
Изменение становится видимым в цепочке, как только транзакция включается в блок, и вы можете проверить, когда это изменение вступит в силу, запросив информацию о счете
``concordium-client`` :

.. code-block:: console

   $concordium-client account show bakerAccount
   ...

   Baker #22 to be removed at epoch 275 (2020-12-24 13:56:26 UTC)
    - Staked amount: 20.000000 GTU
    - Restake earnings: yes

   ...

.. table:: Временная шкала: удаление бейкера

   +--------------------------------------------+-----------------------------------------+----------------------------------------+
   |                                            | Когда транзакция включена в блок        | После 2 + bakerCooldownEpochs эпох     |
   +============================================+=========================================+========================================+
   | Изменение можно увидеть, запросив ноду     | ✓                                       |                                        |
   +--------------------------------------------+-----------------------------------------+----------------------------------------+
   | Бейкер исключен из комитета                |                                         | ✓                                      |
   +--------------------------------------------+-----------------------------------------+----------------------------------------+

.. warning::

   Уменьшение поставленной суммы и удаление бейкера не могут быть совершены одновременно. В течение периода кулдауна (охлаждения), произведенного уменьшением поставленной суммы, бейкер не может быть удален, и наоборот.

Поддержка и обратная связь
===========================

Если у вас возникнут какие-либо проблемы или у вас есть предложения, оставьте свой вопрос или отзыв на `Discord`_,
или свяжитесь с нами по адресу testnet@concordium.com.
