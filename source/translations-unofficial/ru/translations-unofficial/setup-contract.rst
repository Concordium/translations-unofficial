.. highlight:: toml

===================================
Настройка проекта смарт-контракта
===================================

Смарт-контракт в Rust создаётся как обычный библиотечный контейнер Rust. Библиотека затем компилируется в Wasm-код, используя Rust-цель
``wasm32-unknown-unknown`` и, поскольку это просто библиотека Rust, мы можем использовать
Cargo_ для управления зависимостями.


Чтобы создать новый проект смарт-контракта, для начала создайте директорию проекта. Внутри директории проекта выполните следующую команду в командной строке:

.. code-block:: console

   $cargo init --lib

на установит проект Rust-библиотеки по умолчанию, создав несколько файлов и директорий. Ваша директория теперь должна содержать файл ``Cargo.toml`` и директорию ``src``
, а также несколько скрытых файлов.

Чтобы сделать возможной компиляцию в Wasm-код, нам нужно указать cargo правильный ``crate-type``.
Это осуществляется посредством добавления следующих строк в файл ``Cargo.toml``::

   [lib]
   crate-type = ["cdylib", "rlib"]

Добавление стандартной библиотеки смарт-контракта
==================================================

Следующий шаг – добавить контейнер ``concordium-std`` как зависимость. Эта библиотека для Rust содержит процедурные макросы и функции для написания небольших и эффективных смарт-контрактов.

Чтобы добавить библиотеку, нужно открыть ``Cargo.toml`` и прописать строку ``concordium-std = "*"`` (желательно заменить * последней версией `concordium-std`_)
в секции ``[dependencies]`` ::

   [dependencies]
   concordium-std = "0.4"

Документацию по контейнерам можно найти на docs.rs_.

.. note::

   Если нужно использовать модифицированную версию этого контейнера, клонируйте репозиторий, содержащий ``concordium-std`` и установите зависимость на эту директорию, прописав следующие строки в ``Cargo.toml``::

      [dependencies]
      concordium-std = { path = "./path/to/concordium-std" }

.. _Rust: https://www.rust-lang.org/
.. _Cargo: https://doc.rust-lang.org/cargo/
.. _rustup: https://rustup.rs/
.. _repository: https://gitlab.com/Concordium/concordium-std
.. _docs.rs: https://docs.rs/crate/concordium-std/
.. _`concordium-std`: https://docs.rs/crate/concordium-std/

Вот и всё! Вы готовы к разработке своего собственного смарт-контракта.
